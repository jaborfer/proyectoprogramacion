
package VISTA;

import static Principal.DesvanMika.cn;
import java.awt.Image;
import java.awt.Toolkit;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Esta clase lo que hace es manejar la ventana de los componentes
 * @author Josete
 */
public class ComponenteForm extends javax.swing.JFrame {

    String clavePrincipal = null;

    /**
     * El creador como siempre inicia la ventana, le cambia el icono y el nombre
     * muestra la tabla de componentes
     */
    public ComponenteForm() {

        setTitle("Componentes-Desvan de Mika");
        Image icon = Toolkit.getDefaultToolkit().getImage(getClass().getResource("/Imagenes/icono.jpg"));
        setIconImage(icon);
        initComponents();
        muestraTabla("nombre", "");
        botonActCom.setEnabled(false);
    } // fin del creador
/**
 * Este metodo recibe un campo y una cadena y busca en la base de datos en ese campo, esa cadena
 * @param Campo Es un String donde se va a buscar
 * @param Busca Es un String que representa lo que vamos a buscar
 */
    private void muestraTabla(String Campo, String Busca) {
        String consulta;
        String respuesta[] = new String[3];

        tablaComponentes.setEnabled(true);
        tablaComponentes.setVisible(true);
        DefaultTableModel tc = new DefaultTableModel();
        tc.addColumn("Id Compo");
        tc.addColumn("Nombre");
        tc.addColumn("Precio U");
        tablaComponentes.setModel(tc);

        consulta = "Select * from componente where " + Campo + " LIKE'%" + Busca + "%'";

        try {
            Statement st = cn.createStatement();
            ResultSet resultado = st.executeQuery(consulta);
            while (resultado.next()) {
                respuesta[0] = resultado.getString(1);
                respuesta[1] = resultado.getString(2);
                respuesta[2] = resultado.getString(3);
                tc.addRow(respuesta);
            }// fin del while
        } catch (SQLException ex) {
            Logger.getLogger(ComponenteForm.class.getName()).log(Level.SEVERE, null, ex);
        } //fin del try - catch

    } // fin del proceso

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu2 = new javax.swing.JPopupMenu();
        opcionModificar = new javax.swing.JMenuItem();
        opcionBorrar = new javax.swing.JMenuItem();
        jPanel1 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaComponentes = new javax.swing.JTable();
        botonSalir = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        nombreCom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        precioCom = new javax.swing.JTextField();
        botonAñadirCom = new javax.swing.JButton();
        botonActCom = new javax.swing.JButton();

        opcionModificar.setText("Modificar");
        opcionModificar.setToolTipText("");
        opcionModificar.setComponentPopupMenu(jPopupMenu2);
        opcionModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionModificarActionPerformed(evt);
            }
        });
        jPopupMenu2.add(opcionModificar);

        opcionBorrar.setForeground(new java.awt.Color(255, 0, 51));
        opcionBorrar.setText("ELIMINAR");
        opcionBorrar.setComponentPopupMenu(jPopupMenu2);
        opcionBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opcionBorrarActionPerformed(evt);
            }
        });
        jPopupMenu2.add(opcionBorrar);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(167, 91, 91));

        label1.setAlignment(java.awt.Label.CENTER);
        label1.setBackground(new java.awt.Color(253, 181, 142));
        label1.setFont(new java.awt.Font("Comic Sans MS", 0, 48)); // NOI18N
        label1.setForeground(new java.awt.Color(167, 91, 91));
        label1.setText("El desvan de Mika");

        tablaComponentes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablaComponentes.setComponentPopupMenu(jPopupMenu2);
        jScrollPane1.setViewportView(tablaComponentes);

        botonSalir.setText("menu Ficheros");
        botonSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonSalirActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre");

        nombreCom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nombreComKeyReleased(evt);
            }
        });

        jLabel2.setText("Precio U");

        precioCom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                precioComKeyReleased(evt);
            }
        });

        botonAñadirCom.setText("Añadir");
        botonAñadirCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAñadirComActionPerformed(evt);
            }
        });

        botonActCom.setText("Actualizar");
        botonActCom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonActComActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(botonAñadirCom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(botonActCom))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nombreCom, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(precioCom, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nombreCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(precioCom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botonAñadirCom)
                    .addComponent(botonActCom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
 * Al pulsar el boton Salir, cierra esta ventana y nos abre el menú de ficheros
 * 
 */
    private void botonSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonSalirActionPerformed
        MenuFicheros mf = new MenuFicheros();
        mf.setLocationRelativeTo(null);
        mf.setVisible(true);
        dispose();
    }//GEN-LAST:event_botonSalirActionPerformed
/**
 * Al pulsar el boton añadir, comprobamos que se hayan introducido y en caso de estar
 * preparamos la insercción en la tabla reemplazando en el precio la ',' por un punto para
 * la base de datos y poniendo en mayusculas. En la consulta le decimos que nos devuelva la clave creada
 * para que al abrir materiales-componentes le pasamos la clave.
 *  
 */
    private void botonAñadirComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAñadirComActionPerformed
        int clave;
        if (nombreCom.getText().equals("") || precioCom.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Los campos no pueden estar vacios");
        } else {
            try {
                precioCom.setText(precioCom.getText().replace(',', '.'));
                PreparedStatement orden = cn.prepareStatement("INSERT INTO COMPONENTE(nombre,precio_unidad) values(?,?)", PreparedStatement.RETURN_GENERATED_KEYS);
                orden.setString(1, nombreCom.getText().toUpperCase());
                orden.setString(2, precioCom.getText());
                orden.executeUpdate();
                ResultSet rs = orden.getGeneratedKeys();
                rs.next();
                clave = rs.getInt(1);
                JOptionPane.showMessageDialog(null, "Guardado con Exito");
                MaterialesComponentes mc = new MaterialesComponentes(clave, nombreCom.getText().toUpperCase());
                nombreCom.setText("");
                precioCom.setText("");
                muestraTabla("nombre", "");

                mc.setLocationRelativeTo(null);
                mc.setEnabled(true);
                mc.setVisible(true);
            } catch (SQLException ex) {
                Logger.getLogger(ComponenteForm.class.getName()).log(Level.SEVERE, null, ex);
            } //fin del try-catch
        } // fin del if-else

    }//GEN-LAST:event_botonAñadirComActionPerformed
/**
 * Este metodo se ejecuta cada vez que se pulsa una tecla y llama a llenar tabla con
 * el texto escrito que busca el texto en el campo nombre
 */
    private void nombreComKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nombreComKeyReleased
        muestraTabla("nombre", nombreCom.getText());
    }//GEN-LAST:event_nombreComKeyReleased

    private void precioComKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_precioComKeyReleased

    }//GEN-LAST:event_precioComKeyReleased
/**
 * primero comprueba que se ha seleccionado una linea, una vez comprobado, seleccionada
 * saca los datos al formulario y prepara el update
 *  
 */
    private void opcionModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionModificarActionPerformed
        int fila;
        fila = tablaComponentes.getSelectedRow();
        if (fila >= 0) {
            clavePrincipal = tablaComponentes.getValueAt(fila, 0).toString();
            nombreCom.setText(tablaComponentes.getValueAt(fila, 1).toString());
            precioCom.setText(tablaComponentes.getValueAt(fila, 2).toString());
            botonActCom.setEnabled(true);
        } else {
            JOptionPane.showMessageDialog(null, "Pulse con el boton izquierdo para seleccionar una linea");
        } // fin del if
    }//GEN-LAST:event_opcionModificarActionPerformed
/**
 * Es el boton actualizar, primero reemplaza en el precio las , por los . para que sean compatibles con la base de datos
 * y luego ejecuta el update 
 *  
 */
    private void botonActComActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonActComActionPerformed
        String orden;

        precioCom.setText(precioCom.getText().replace(',', '.'));
        orden = "Update componente set nombre='" + nombreCom.getText().toUpperCase() + "', precio_unidad='" + precioCom.getText() + "' where codcomponente=" + clavePrincipal;
        try {
            PreparedStatement pst = cn.prepareStatement(orden);
            pst.executeUpdate();
            botonActCom.setEnabled(false);
            muestraTabla("nombre", "");

            MaterialesComponentes mc = new MaterialesComponentes(Integer.valueOf(clavePrincipal), nombreCom.getText().toUpperCase());
            nombreCom.setText("");
            precioCom.setText("");
            mc.setLocationRelativeTo(null);
            mc.setEnabled(true);
            mc.setVisible(true);

        } catch (SQLException ex) {
            Logger.getLogger(ComponenteForm.class.getName()).log(Level.SEVERE, null, ex);
        } // fin del try-catch

    }//GEN-LAST:event_botonActComActionPerformed
/**
 * primero comprueba que se ha seleccionado una linea, una vez comprobado, seleccionada
 * saca los datos al formulario pregunta si esta seguro de querer borrar y si acepta pues borra
 *  
 */
    private void opcionBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opcionBorrarActionPerformed
        String orden;
        int fila;
        int respuesta;

        fila = tablaComponentes.getSelectedRow();
        if (fila >= 0) {
            respuesta = JOptionPane.showConfirmDialog(null, "¿Seguro que que quiere borrar " + tablaComponentes.getValueAt(fila, 1) + "?");
            if (respuesta == 0) {
                orden = "DELETE FROM componente where codcomponente=" + tablaComponentes.getValueAt(fila, 0);
                PreparedStatement pst;
                try {
                    pst = cn.prepareStatement(orden);
                    pst.executeUpdate();
                } catch (SQLException ex) {
                    Logger.getLogger(ComponenteForm.class.getName()).log(Level.SEVERE, null, ex);
                } // fin del try-catch
                muestraTabla("nombre", "");

            } // fin del if interno

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar una fila con el boton izquierdo");
        } // fin del if externo
    }//GEN-LAST:event_opcionBorrarActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonActCom;
    private javax.swing.JButton botonAñadirCom;
    private javax.swing.JButton botonSalir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu2;
    private javax.swing.JScrollPane jScrollPane1;
    private java.awt.Label label1;
    private javax.swing.JTextField nombreCom;
    private javax.swing.JMenuItem opcionBorrar;
    private javax.swing.JMenuItem opcionModificar;
    private javax.swing.JTextField precioCom;
    private javax.swing.JTable tablaComponentes;
    // End of variables declaration//GEN-END:variables

}
